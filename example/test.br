// manual-sized struct;
manual Person
0 byte age
4 float weight
8 float height
12 12 name
24 int id;

// auto-sized struct;
// 9bytes array is resized to 12bytes to align with 4bytes;
// same occur to byte, short and long;
auto autoPerson
byte age
float weight
float height
9 name
int id;


// auto-sized struct;
auto Vector2
float x
float y;

// auto-sized struct;
auto Vector3
float x
float y
float z;

code 
`
    int main()
    {
        Disk disk0 = disk_read("test.img");
        Person p;
        p.age = 244;
        p.weight = 99980.5;
        p.height = 999891.75;
        strcpy(p.name, "joao boladao");
        p.id = 12349956;
        _insert(&disk0, 0, "Hello World!Hello World!");
        set_Person(&disk0, 0, p);
        union {
            Person p;
            byte b[sizeof(Person)];
        } u;
        u.p = p;
        printf("sizeof(Person): %d\n", sizeof(Person));
        for (int i = 0; i < 28; i++)
        {
            printf("%d: %d\n", disk0[i], u.b[i]);
        }
        int size = strlen(&disk0);
        printf("Disk0: %s\n", disk0);
        printf("Size: %d\n", size);
    }
`;