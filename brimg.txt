disk: unsigned char[]

types:
0 = void 0 bytes
1 = byte
2 = int 4 bytes
3 = float 4 bytes
4 = string ? bytes
5+ = custom types

// disk 
//byte 0 to 255 are "reserved" for the system

0 = NULL
1-4 = current index
5-8 = 

32-48 = title

// disk functions

0 - 
1 - set (position, value)
2 - insert (value, position)
3 - remove (position, size or 1)
4 - move (origin, destiny, size or 1)
5 - swap (origin, destiny, size or 1)
6 - shift (start, size, direction)
7 - random (destiny, size or 1)
8 - copy (origin, destiny, size or 1)
9 - fill (start, size, value)
10 - reverse (start, size)
11 - sort (start, size)
12 - find (offset, size)
13 - replace (position, size, value)
14 - replaceall (position, size, value)
15 - setint (position, value)
16 - setfloat (position, value)
17 - goto (position)
18 - if (condition, 

// structs

struct people
0 byte age
1 float weight
5 float height
9 string name
21 int id;

struct {
 byte age;
 float weight;
 float height;
 char* name;
 int id;
} people;

people getpeople(index)
{
 people joao;
 joao.age = disk[index]
 joao.weight = getNumber(disk,index,4).f
 joao.height = getNumber(disk,index + 5).f
 joao.name = getString(disk,index + 9, 21 - 9)
 joao.id = getNumber(disk, index + 21).i
 return joao;
}