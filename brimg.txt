disk: unsigned char[]

types:
0 = void 0 bytes
1 = byte 1 byte
2 = short 2 bytes
3 = int 4 bytes

// disk 
// byte 0 to 7 are "reserved" for the system

version = x.y.z

0 = state
1 = pointer size 1,2 or 4
2 = version x
3 = version y
4-(4,5,7) = current index



// disk functions

0 - STATE (state)                                         f b
1 - SET (position, size, data)                            f ptr ptr ?
2 - INSERT (position, size, data)                         f ptr ptr ?
3 - DELETE (position, size)                               f ptr ptr
4 - MOVE (origin, destiny, size)                          f ptr ptr ptr
5 - SWAP (origin, destiny, size)                          f ptr ptr ptr
6 - SHIFT (start, size, direction)                        f ptr ptr b
7 - RANDOM (position, size)                               f ptr ptr
8 - COPY (origin, destiny, size)                          f ptr ptr ptr
9 - FILL (start, size, value)                             f ptr ptr b
10 - REVERSE (start, size)                                f ptr ptr
11 - SORT (start, size)                                   f ptr ptr
12 - FIND (position, size, result, patternsize, pattern)  f ptr ptr ptr ptr ?
13 - CONVERT (position, oldtype, newtype)                 f ptr b b



// conditions

14 - IF (position, size, code)                               f ptr ptr ?
15 - EQUAL (position1, position2, size, result)              f ptr ptr ptr ptr
16 - NOT_EQUAL (position1, position2, size, result)          f ptr ptr ptr ptr
17 - GREATER (position1, position2, size, result)            f ptr ptr ptr ptr
18 - LESS (position1, position2, size, result)               f ptr ptr ptr ptr
19 - GREATER_OR_EQUAL (position1, position2, size, result)   f ptr ptr ptr ptr
20 - LESS_OR_EQUAL (position1, position2, size, result)      f ptr ptr ptr ptr
21 - AND (position, size, result)                            f ptr ptr ptr
22 - OR (position, size, result)                             f ptr ptr ptr


// other
23 - PRINT (position, size)     f ptr ptr
24 - SCAN (position, size)      f ptr ptr
25 - GOTO (position)            f ptr





// math

26 - ADD (position1, position2, type)           f ptr ptr b
27 - SUB (position1, position2, type)           f ptr ptr b
28 - MUL (position1, position2, type)           f ptr ptr b
29 - DIV (position1, position2, type)           f ptr ptr b
30 - INCREMENT (position, type)                 f ptr b
31 - DECREMENT (position, type)                 f ptr b
32 - MOD (position1, position2 type)            f ptr ptr ptr b
33 - POW (position1, position2, type)           f ptr ptr b
34 - SQRT (position, type)                      f ptr b
35 - ABS (position, type)                       f ptr b
36 - MIN (position1, position2, result, type)   f ptr ptr ptr b
37 - MAX (position1, position2, result, type)   f ptr ptr ptr b
38 - RANDOM (position, pmin, pmax, type)        f ptr ptr ptr b


// bruter bytecode compiler

0 - 
1 - literal
2 - decimal
3 - hex
4 - short
5 - int

// arduino
// cmd mode
0 - load(position, size)
1 - save(position, size)
2 - run(position, size)
4 - defaultdelay(ms)
5 - 