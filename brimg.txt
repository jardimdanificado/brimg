rgb: 
{
	r=char,
	g=char,
	b=char
}

disk(image): (rgb**)


Virtual Machine: (char[256][256][256][256]), 


Virtual Machine:

system = 0

0 = system
0,0,1 = types
0,0,2 = disks
0,0,3 = 
0,0,4 = 
0,0,5 = 


// system 

0,0,0 = NULL
0,0,1 = title
0,0,2 = 
0,0,3 = 
0,0,4 = 
0,0,5 = current disk
0,0,6 = current token index


0,0,10 = +
0,0,11 = -
0,0,12 = /
0,0,13 = *
0,0,14 = %
0,0,15 = ^

0,0,16 = set
0,0,17 = free
0,0,18 = exit

0,0,20 = play
0,0,21 = next token
0,0,22 = goto token
0,0,23 = end token/close
0,0,24 = play section
0,0,25 = write token
0,0,26 = 

0,0,30 = ==
0,0,31 = >
0,0,32 = <
0,0,33 = >=
0,0,34 = <=
0,0,35 = !=

0,0,36 = if $1 goto $2
0,0,37 = ifelse $1 goto $2 else goto $3

// string functions

0,0,128 = 
0,0,129 = strcpy
0,0,130 = chrcat
0,0,131 = strcat
0,0,132 = intcat
0,0,133 = strchr
0,0,134 = strstr
0,0,135 = 

//file function 
0,0,140 = file read
0,0,141 = file write


0,0,201 = print
0,0,202 = scan

// system types

0,1,0 = void
0,1,1 = rgba/pointer
0,1,2 = function 
0,1,3 = array/list/string
0,1,4 = byte 
0,1,5 = int
0,1,6 = float
0,1,7 = 
0,1,8 = 
0,1,9 = 
0,1,10 = 
0,1,11 = 
0,1,12 = 
0,1,13 = 
0,1,14 = 
0,1,15 = 
0,1,16 = 

byte number;
int number number number number;
float number number number number;

arrays:
  array type whatever combination close;
  array int 44 55 77 99 1 close;


R G B A pointer
R = stack
G = stack
B = index
A = index

